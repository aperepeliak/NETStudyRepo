@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div id="videoTableOutput" class="col-md-6 col-md-offset-2">

    </div>
</div>

<button id="createVideo" class="btn btn-success">Create Video</button>

<div class="row">
    <div id="videoEditOutput">

    </div>
</div>

<script id="videoTable" type="text/html">
    <table class="table table-bordered">
        <thead>
        <th>Title</th>
        <th>Length</th>
        <th></th>
        </thead>
        <tbody>
            {{#each video}}
            <tr data-id={{Id}}>
                <td>{{Title}}</td>
                <td>{{Length}}</td>
                <td>
                    <button class="editVideo btn btn-primary">Edit</button>
                    <button class="deleteVideo btn btn-primary">Delete</button>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</script>

<script id="videoEdit" type="text/html">
    <hr />
    <form class="form-inline">
        <input type="hidden" name="id" id="id" value="{{Id}}" />
        <label for="title">Title:</label>
        <input class="form-control" type="text" name="Title" id="title" required value="{{Title}}" />
        <label for="length">Length:</label>
        <input class="form-control" type="number" min="0" max="200" name="Length" id="length" value="{{Length}}" />
        <input type="submit" value="Submit" id="saveVideo" class="btn btn-default" />
    </form>
</script>

@section scripts
{
    <script src="~/Scripts/handlebars.js"></script>
    <script>
        var videoServer = (function(){

            var videoApiUrl = '@Url.RouteUrl("DefaultApi", new { httproute="", controller = "videos" })';

            $(document).ajaxError(function (event, xhr) {
                alert(`${xhr.status} : ${xhr.statusText}`);
            });

            var getVideos = function () {
                return $.ajax(videoApiUrl);
            };

            var getVideo = function (id) {
                return $.ajax(videoApiUrl + "/" + id);
            };

            var updateVideo = function (video) {
                return $.ajax(
                    videoApiUrl + "/" + video.Id,
                    {
                        type: "PUT",
                        data: video
                    }
                );
            };

            var addVideo = function (video) {
                return $.ajax(videoApiUrl,
                    {
                        type: "POST",
                        data: video
                    });
            };

            var deleteVideo = function(id) {
                return $.ajax(
                    videoApiUrl + "/" + id,
                    {
                        type: "DELETE"
                    }
                );
            }

            return {
                deleteVideo: deleteVideo,
                addVideo: addVideo,
                updateVideo: updateVideo,
                getVideos: getVideos,
                getVideo: getVideo
            };

        }());

        (function() {

            var templates = {};

            var compileTemplates = function () {
                templates.videoTable = Handlebars.compile($("#videoTable").html());
                templates.videoEdit = Handlebars.compile($("#videoEdit").html());
            };

            var showAllVideos = function (data) {
                var output = templates.videoTable({ video: data });
                $("#videoTableOutput").html(output);
            };

            var showVideoForEdit = function (video) {
                var output = templates.videoEdit(video);
                $("#videoEditOutput").html(output);
            };

            var refreshVideos = function () {
                videoServer.getVideos().done(showAllVideos);
            };

            var editVideo = function () {
                var id = getId(this);
                videoServer.getVideo(id).done(showVideoForEdit);
            };

            var createVideo = function () {
                var video = {
                    Id: 0,
                    Title: "",
                    Length: 0
                };

                showVideoForEdit(video);
            };

            var deleteVideo = function() {
                var id = getId(this);
                videoServer.deleteVideo(id).done(refreshVideos);
            }

            var clearEdit = function () {
                $("#videoEditOutput").empty();
            };

            var saveVideo = function () {
                var video = {
                    "Id": $("#id").val(),
                    "Title": $("#title").val(),
                    "Length": $("#length").val()
                };

                var operation;
                if (video.Id != "0") {
                    operation = videoServer.updateVideo(video);
                } else {
                    operation = videoServer.addVideo(video);
                }
                operation.done(refreshVideos, clearEdit);
                return false;
            };

            var wireEvents = function () {
                $(document).on("click", ".editVideo", editVideo);
                $(document).on("click", "#saveVideo", saveVideo);
                $(document).on("click", "#createVideo", createVideo);
                $(document).on("click", ".deleteVideo", deleteVideo);
            };

            var getId = function (element) {
                return $(element).parents("tr").attr("data-id");
            };

            $(function () {
                wireEvents();
                compileTemplates();
                refreshVideos();
            });

        }());

    </script>
}